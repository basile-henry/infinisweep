name: CI
on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize
jobs:
  cabal:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cabal: ["3.2"]
        ghc: ["8.4.3", "9.0.2"]
    steps:
      - uses: actions/checkout@v3
      - uses: haskell/actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}
      - run: cabal v2-update
      - run: cabal v2-freeze
      - uses: actions/cache@v3
        with:
          path: |
            ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
            dist-newstyle
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ghc }}-
      - run: sudo apt-get install libncursesw5-dev # install ncurses
      - run: cabal v2-build

  stack:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: haskell/actions/setup@v2
        with:
          ghc-version: '9.0.2'
          enable-stack: true
          stack-version: 'latest'
      - uses: actions/cache@v3
        name: Cache ~/.stack
        with:
          path: ~/.stack
          key: ${{ matrix.os }}-stack
      - if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install libncursesw5-dev # install ncurses
      - if: matrix.os == 'macos-latest'
        run: brew install ncurses
      - run: stack build

  nix:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v17
      with:
        nix_path: nixpkgs=channel:nixos-22.05
    - uses: cachix/cachix-action@v10
      with:
        name: basile-henry
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
    - run: nix-build
